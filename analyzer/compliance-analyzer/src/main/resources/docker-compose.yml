version: '3.4'

services:

  # Clones the repository
  repo-cloner:
    image: alpine/git:v2.26.2
    entrypoint: ["sh", "-c"]
    # TODO Substitute repo URL with "${REPOSITORY_URL}"
    command:
      - |
        set -e

        # Cloning the repository
        git clone --verbose https://github.com/bytedeco/javacv /home/git/buildroot/project
        echo "...cloning done."

        # Fixing shared volume permissions
        echo "Assigning shared volume to $${SHARED_VOLUME_USER}..."
        chown -R $${SHARED_VOLUME_USER} /home/git/buildroot
        echo "...shared volume assigned to $${SHARED_VOLUME_USER}."
    environment:
      - REPOSITORY_URL
      - SHARED_VOLUME_USER=1000:1000 # who will own the shared volume
    volumes:
      - buildroot-volume:/home/git/buildroot

  # Pom patcher
  pom-patcher:
    image: endocodeci/pom-patch:sha-c47d6c5
    entrypoint: ["sh", "-c"]
    command:
      - |
        set -e

        # Moving to the repository folder: counting files & directories (including hidden ones) will be easier
        cd /home/configure/buildroot/project

        # Counting files & directories (including hidden ones) of the project being cloned.
        # If < 2 (only the `.git` folder is present), cloning has not terminated
        while [ "$$(find . ! -name . -prune -print | grep -c /)" -lt 2 ]; do
          echo "...still cloning..."
          sleep 2
        done
        echo "...repository has been cloned."

        # Patching the pom.xml file
        echo "Patching the pom.xml file..."
        cd /home/configure
        if python -q insert-build-plugin.py qmstr-maven-plugin.xml ; then
          echo "...pom.xml file patched successfully."
        else
          echo "...pom.xml file patching failed."
          exit $$?
        fi
    depends_on:
      - repo-cloner
    volumes:
      - buildroot-volume:/home/configure/buildroot
    healthcheck:
      # TODO Move this to a `while` loop elsewhere
      test: [
        "CMD-SHELL",
        "[ -z \"$$(cat pom.xml | grep -i \"qmstr\")\" ] && exit 1 || exit 0"
      ]
      start_period: 2s
      interval: 2s

#  waiter:
#    image: busybox:1.32.1
#    depends_on:
#      pom-patcher:
#        condition: service_healthy
#    command:
#      - "ls"
#      - "-al"
#      - "/buildroot/project"
#    volumes:
#      - buildroot-volume:/buildroot

#  # DGraph
#  # From: https://github.com/dgraph-io/dgraph/blob/master/contrib/config/docker/docker-compose.yml
#  zero:
#    image: dgraph/dgraph:v20.11.0
#    volumes:
#      - /tmp/data:/dgraph
#    ports:
#      - 5080:5080
#      - 6080:6080
#    restart: on-failure
#    command: dgraph zero --my=zero:5080
#    logging:
#      driver: none
#  alpha:
#    image: dgraph/dgraph:v20.11.0
#    volumes:
#      - /tmp/data:/dgraph
#    ports:
#      - 8080:8080
#      - 9080:9080
#    restart: on-failure
#    command: dgraph alpha --my=alpha:7080 --zero=zero:5080
#    logging:
#      driver: none
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
#  ratel:
#    image: dgraph/dgraph:v20.11.0
#    ports:
#      - 8000:8000
#    command: dgraph-ratel
#    logging:
#      driver: none
#
#  # RabbitMQ
#  rabbitmq:
#    image: rabbitmq:3-management
#    ports:
#      - 5672:5672
#  #    deploy:
#  #      resources:
#  #        limits:
#  #          cpus: '0.1'
#  wait-for-rabbit: # initContainer waiting for RabbitMQ
#    image: endocode/rabbit-poller:latest
#    depends_on:
#      - rabbitmq
#    environment:
#      RABBIT_HOST: "rabbitmq"
#      RABBIT_PORT: "5672"
#
#  # Orchestrator (former `qmstr-master`)
#  master:
#    image: endocodeci/qmstr-master:sha-6f14b29
#    entrypoint: "/usr/local/bin/qmstr-master"
#    command: "--config /home/qmstr/config/qmstr.yaml"
#    depends_on:
#
#      # Repository cloner
#      - repo-cloner
#
#      # DGraph
#      - zero
#      - alpha
#      - ratel
#
#      # RabbitMQ and its healthcheck initContainer
#      - rabbitmq
#      - wait-for-rabbit
#
#    ports:
#      - 50051:50051
#    environment:
#      SERVER_BUILDPATH: "/var/qmstr/buildroot"
#    volumes:
#      - ./qmstr-config.yaml:/home/qmstr/config/qmstr.yaml
#      - buildroot-volume:/var/qmstr/buildroot/

volumes:
  buildroot-volume:


